<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MySQl on Enrique-Blog Space</title>
    <link>https://enrique_liu.gitee.io/tags/mysql/</link>
    <description>Recent content in MySQl on Enrique-Blog Space</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>Copyright @ 2020-2020, Enrique Liu and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Sat, 09 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://enrique_liu.gitee.io/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>DataBase System Concept相关语句 (笔记)</title>
      <link>https://enrique_liu.gitee.io/blog/blog5/</link>
      <pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://enrique_liu.gitee.io/blog/blog5/</guid>
      <description>表的创建 create table classroom(building varchar (15),room_number varchar (7),capacity numeric (4,0),primary key(building, room_number));create table department(dept_name varchar (20),building varchar (15),budget numeric (12,2) check (budget &amp;gt; 0),primary key (dept_name));create table course(course_id varchar(7),title varchar(50),dept_name varchar(20),credits numeric(2,0) check(credits &amp;gt; 0),primary key (course_id),foreign key (dept_name) references department(dept_name) on delete set null);create table instructor(ID varchar (5),name varchar (20) not null,dept_name varchar (20),salary numeric (8,2) check (salary &amp;gt; 29000),primary key (ID),foreign key (dept_name) references department(dept_name) on delete set null);create table section(course_id varchar (8),sec_id varchar (8),semester varchar (6) check (semester in(&#39;Fall&#39;, &#39;Winter&#39;, &#39;Spring&#39;, &#39;Summer&#39;)),year numeric (4,0) check (year &amp;gt; 1701 and year &amp;lt; 2100),building varchar (15),room_number varchar (7),time_slot_id varchar (4),primary key (course_id,sec_id,semester,year),foreign key (course_id) references course(course_id) on delete cascade,foreign key (building, room_number) references classroom(building, room_number) on delete set null);create table teaches(ID varchar (5),course_id varchar (8),sec_id varchar (8),semester varchar (6),year numeric (4,0),primary key (ID, course_id, sec_id, semester, year),foreign key (course_id, sec_id, semester, year) references section(course_id, sec_id, semester, year) on delete cascade,foreign key (ID) references instructor(ID) on delete cascade);create table student(ID varchar (5),name varchar (20) not null,dept_name varchar (20),tot_cred numeric (3,0) check (tot_cred &amp;gt;= 0),primary key (ID),foreign key (dept_name) references department(dept_name) on delete set null);create table takes(ID varchar (5),course_id varchar (8),sec_id varchar (8),semester varchar (6),year numeric (4,0),grade varchar (2),primary key (ID, course_id, sec_id, semester, year),foreign key (course_id, sec_id, semester, year) references section(course_id, sec_id, semester, year) on delete cascade,foreign key (ID) references student(ID) on delete cascade);create table advisor(s_ID varchar (5),i_ID varchar (5),primary key (s_ID),foreign key (i_ID) references instructor (ID)on delete set null,foreign key (s_ID) references student (ID) on delete cascade);create table prereq(course_id varchar(8),prereq_id varchar(8),primary key (course_id, prereq_id),foreign key (course_id) references course(course_id) on delete cascade,foreign key (prereq_id) references course(course_id));create table timeslot(time_slot_id varchar (4),day varchar (1) check (day in (&#39;M&#39;, &#39;T&#39;, &#39;W&#39;, &#39;R&#39;, &#39;F&#39;, &#39;S&#39;, &#39;U&#39;)),start_time time,end_time time,primary key (time_slot_id, day, start_time));create table timeslot(time_slot_id varchar (4),day varchar (1),start_hr numeric (2) check (start_hr &amp;gt;= 0 and start_hr &amp;lt; 24),start_min numeric (2) check (start_min &amp;gt;= 0 and start_min &amp;lt; 60),end_hr numeric (2) check (end_hr &amp;gt;= 0 and end_hr &amp;lt; 24),end_min numeric (2) check (end_min &amp;gt;= 0 and end_min &amp;lt; 60),primary key (time_slot_id, day, start_hr, start_min));样本数据 insert into classroom values(&amp;quot;Packard&amp;quot;,101,500),(&amp;quot;Painter&amp;quot;,514,10),(&amp;quot;Taylor&amp;quot;,3128,70),(&amp;quot;Waston&amp;quot;,100,30),(&amp;quot;Watson&amp;quot;,120,50);insert into department values(&amp;quot;Biology&amp;quot;,&amp;quot;Waston&amp;quot;,90000),(&amp;quot;Comp.</description>
    </item>
    
    <item>
      <title>DBeaver连接MySQL 8以上版本以及解决可能遇到的问题</title>
      <link>https://enrique_liu.gitee.io/blog/blog4/</link>
      <pubDate>Sat, 11 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://enrique_liu.gitee.io/blog/blog4/</guid>
      <description>前期准备 数据库MySQL版本8.0.18
下载一个DBeaver.exe
下载地址：https://dbeaver.io/download/
DBeaver连接MySQL 点击新建 &amp;ndash;》数据库连接 &amp;ndash;》下一步
选择数据库 &amp;ndash;》下一步 &amp;ndash;》完成
双击新建的文件会提示下面这样的错误
解决方案 原因是数据库的时区配置不对 打开cmd以管理员运行 登录数据库 &amp;ndash;》输入 show variables like &amp;lsquo;%time_zone%&#39;;
SYSTEM为默认美国时间，解决方法：输入 set global time_zone=&#39;+8:00&amp;rsquo;;
虽然显示还是SYSTEM，退出数据库重启一遍即可
然后返回到DBeaver再次双击连接
红色框表示连接成功</description>
    </item>
    
  </channel>
</rss>